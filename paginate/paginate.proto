syntax = "proto3";

package paginate;

/**
 * @apiDefine PageOptionsDefine
 * @apiParam (PageOptions) {Struct} PageOptions 分页请求选项
 * @apiParam (PageOptions) {Int32} [PageOptions.PageSize] 每页显示：默认 10 条
 * @apiParam (PageOptions) {Int32} [PageOptions.PageNumber] 第几页；默认 1 (页码分页)
 * @apiParam (PageOptions) {Int64} [PageOptions.SortValue] 最大值 或 最小值 (主键分页)
 * @apiParam (PageOptions) {String} [PageOptions.SortField] 排序字段 (主键分页)
 * @apiParam (PageOptions) {String} [PageOptions.SortFieldTo] 排序： desc 或 asc ， 不是这两个值，默认 desc (主键分页)
 */
// 分页选项
message PageOptions {
    int32 PageSize = 1; // 每页显示
    int32 PageNumber = 2; // 第几页

    // 主键分页模式参数
    int64 SortValue = 3; // 最大值 或 最小值
    string SortField = 4; // 排序字段
    string SortFieldTo = 5; // 排序： desc 或 asc ， 不是这两个值，默认 desc
}

/**
 * @apiDefine PageResultDefine
 * @apiSuccess (PageResult) {Struct} PageResult 分页结果
 * @apiSuccess (PageResult) {Int32} PageResult.TotalRecords 总记录
 * @apiSuccess (PageResult) {Int32} PageResult.TotalPages 总页数
 * @apiSuccess (PageResult) {Int32} PageResult.PageSize 每页显示
 * @apiSuccess (PageResult) {Int32} PageResult.PageNumber 当前页码
 * @apiSuccess (PageResult) {Int32} PageResult.SortValue 主键分页模式参数:最大值 或 最小值
 */
// 分页结果
message PageResult {
    int32 TotalRecords = 1; // 总记录
    int32 TotalPages = 2; // 总页数
    int32 PageSize = 3; // 每页显示
    int32 PageNumber = 4; // 当前页码
    int64 SortValue = 5; // 主键分页模式参数
}
